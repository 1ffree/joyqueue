<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jd.journalq.repository.MetricRepository">

    <sql id="baseSelect">
      SELECT
        id          ,
        code        ,
        `alias_code` AS aliasCode,
        `name`      ,
        `type`      ,
--         charts      AS chartsStr,
        source      ,
        provider    ,
        description ,
        create_time AS createTime,
        create_by   AS `createBy.id`,
        update_time AS updateTime,
        update_by   AS `updateBy.id`,
        status
      FROM metric m
    </sql>

    <insert id="add" useGeneratedKeys="true" keyProperty="id" parameterType="Metric">
        INSERT INTO metric(
          id         ,
          code       ,
          `alias_code`    ,
          `name`     ,
          `type`     ,
--           charts     ,
          source     ,
          provider   ,
          description,
          create_time,
          create_by  ,
          update_time,
          update_by  ,
          status)
        VALUES(
           #{id},
           #{code},
           #{aliasCode},
           #{name},
           #{type},
--            #{charts},
           #{source},
           #{provider},
           #{description},
           #{createTime},
           #{createBy.id},
           #{updateTime},
           #{updateBy.id},
           #{status})
    </insert>

    <update id="update" parameterType="Metric">
        UPDATE
          metric
        SET
          `alias_code`     =  #{aliasCode},
          `name`      =  #{name},       
          `type`      =  #{type},       
--           charts      =  #{charts},
          source      =  #{source},     
          provider    =  #{provider},   
          description =  #{description},
          status      =  #{status},
          update_time =  #{updateTime},
          update_by   =  #{updateBy.id}
        WHERE id=#{id}
    </update>

    <delete id="deleteById" parameterType="long">
        DELETE FROM `metric`
        WHERE id=#{id}
    </delete>

    <select id="findById" parameterType="long" resultType="Metric">
        <include refid="baseSelect"/>
        WHERE m.id = #{id}
    </select>

    <update id="state" parameterType="Metric">
        UPDATE metric
        SET
        update_by = #{updateBy.id},
        update_time = #{updateTime},
        `status` = #{status}
        WHERE
        id = #{id}
    </update>

    <sql id="queryCondition">
        <where>
            m.status > 0

            <if test="query.keyword != null and query.keyword != ''">
                AND (m.alias_code LIKE CONCAT('%',#{query.keyword},'%') OR m.name LIKE CONCAT('%',#{query.keyword},'%')
                OR m.type LIKE CONCAT('%',#{query.keyword},'%') )
            </if>
            <if test="query.code != null and query.code != ''">
                AND m.code = #{query.code}
            </if>
            <if test="query.status != null">
                AND m.status = #{query.status}
            </if>
        </where>
    </sql>

    <select id="findCountByQuery" parameterType="QPageQuery" resultType="int">
        SELECT count(1)
        FROM metric m
        <include refid="queryCondition"/>
    </select>

    <select id="findByQuery" parameterType="QPageQuery" resultType="Metric">
        <include refid="baseSelect"/>
        <include refid="queryCondition"/>
        ORDER BY m.id DESC
    </select>

    <select id="findByCode" parameterType="String" resultType="Metric">
        <include refid="baseSelect"/>
        where m.code=#{code}
        limit 0,1
    </select>

</mapper>