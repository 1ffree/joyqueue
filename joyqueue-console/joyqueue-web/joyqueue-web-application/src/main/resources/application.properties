#spring.datasource.driver-class-name=com.mysql.jdbc.Driver
#spring.datasource.url=${spring_datasource_url}
#spring.datasource.connectionProperties=useUnicode=true;characterEncoding=UTF8;rewriteBatchedStatements=true;socketTimeout=60000;autoReconnectForPools=true;allowMultiQueries=true;zeroDateTimeBehavior=convertToNull
spring.profiles.active=h2

# Hikari will use the above plus the following to setup connection pooling
spring.datasource.type=com.zaxxer.hikari.HikariDataSource
spring.datasource.hikari.minimum-idle=${spring_datasource_hikari_minimum-idle}
spring.datasource.hikari.maximum-pool-size=${spring_datasource_hikari_maximum-pool-size}
spring.datasource.hikari.idle-timeout=${spring_datasource_hikari_idle-timeout}
spring.datasource.hikari.pool-name=hikari
spring.datasource.hikari.max-lifetime=${spring_datasource_hikari_max-lifetime}
spring.datasource.hikari.connection-timeout=30000
spring.datasource.hikari.connection-test-query=SELECT 1

#vertx.clustered=true
#vertx.cluster-manager.type=ignite
vertx.http.port=${http_server_port}
vertx.routing.worker=true
vertx.routing.instances=6
vertx.routing.maxWorkerExecuteTime=6000000000
vertx.routing.workerPoolName=routing
vertx.routing.workerPoolSize=30
vertx.routing.multiThreads=true

# mybatis
mybatis.mapper-locations=classpath:mapper/*.xml
mybatis.config-location=classpath:mybatis-config.xml
